variables:
  OBJECTS_DIRECTORY: "obj"
  NUGET_PACKAGES_DIRECTORY: ".nuget"
  SOURCE_CODE_PATH: "src/GrillBot"
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_HOST: tcp://localhost:2378
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest

stages:
  - build
  - test
  - container_deploy

cache:
  key: "$CI_JOB_STAGE-$CI_COMMIT_REF_SLUG"
  paths:
    - "$SOURCE_CODE_PATH$OBJECTS_DIRECTORY/project.assets.json"
    - "$SOURCE_CODE_PATH$OBJECTS_DIRECTORY/*.csproj.nuget.*"
    - "$NUGET_PACKAGES_DIRECTORY"

  policy: pull-push

build:
  image: mcr.microsoft.com/dotnet/sdk:5.0
  stage: build
  script:
    - "dotnet restore $SOURCE_CODE_PATH --packages $NUGET_PACKAGES_DIRECTORY"
    - "dotnet build $SOURCE_CODE_PATH --no-restore"

tests:
  image: mcr.microsoft.com/dotnet/sdk:5.0
  stage: test
  script:
    - "dotnet restore $SOURCE_CODE_PATH --packages $NUGET_PACKAGES_DIRECTORY"
    - 'dotnet test $SOURCE_CODE_PATH --no-restore --test-adapter-path:. --logger:"junit;LogFilePath=..\artifacts\{assembly}-test-result.xml;MethodFormat=Class;FailureBodyFormat=Verbose"'
  artifacts:
    when: always
    paths:
      - ./**/*test-result.xml
    reports:
      junit:
        - ./**/*test-result.xml

docker:build:
  image: docker:19.03.12
  stage: container_deploy
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --pull -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE
